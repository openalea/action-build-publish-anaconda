name: Test Setup Action

on:
  workflow_dispatch:
    inputs:
      conda-directory:
        description: 'Directory containing the conda recipe'
        required: true
        type: choice
        options:
          - dummy_pkg
          - dummy_pkg_noarch
        default: dummy_pkg
      force-full-matrix:
        description: 'Force build on full os x py matrix.'
        default: 'false'
        required: false
      force-no-publication:
        description: 'Prevent publication (forbid action to publish anything on anaconda)'
        default: 'false'
        required: false
      force-no-clean:
        description: 'Prevent cleaning (forbid action to clean anything on anaconda)'
        default: 'false'
        required: false
      force-ubuntu-only:
        description: 'Force build on ubuntu only'
        default: 'false'
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ref: "refs/heads/feature"
            event: "push"
          - ref: "refs/heads/feature"
            event: "pull_request"
          - ref: "refs/heads/main"
            event: "push"
          - ref: "refs/heads/main"
            event: "workflow_dispatch"
          - ref: "refs/tags/vx.x.x"
            event: "push"
          - ref: "refs/tags/vx.x.x"
            event: "release"
    steps:
      - name: Checkout repo hosting action
        uses: actions/checkout@v4
      - name: Run setup-ci for different scenarios
        id: setci
        uses: ./actions/setup-ci
        with:
          conda-directory: ${{ inputs.conda-directory }}
          git-ref: ${{ matrix.ref }}
          git-event: ${{ matrix.event }}
          force-full-matrix: ${{ inputs.force-full-matrix }}
          force-no-publication: ${{ inputs.force-no-publication }}
          force-no-clean: ${{ inputs.force-no-clean }}
          force-ubuntu-only: ${{ inputs.force-ubuntu-only }}
      - name: Test results
        run: |
          echo "conda directory:      ${{ inputs.conda-directory }}"
          echo "version:              ${{ steps.setci.outputs.version }}"
          echo "py_latest:            ${{ steps.setci.outputs.py_latest }}"
          echo "simulated ref:        ${{ matrix.ref }}"
          echo "simulated event:      ${{ matrix.event }}"
          echo "force-full-matrix:    ${{ inputs.force-full-matrix }}"
          echo "force-no-publication: ${{ inputs.force-no-publication }}"
          echo "force-no-clean:       ${{ inputs.force-no-clean }}"
          echo "force-ubuntu-only:    ${{ inputs.force-ubuntu-only }}"
          echo "build_os:             ${{ steps.setci.outputs.build_os }}"
          echo "build_py:             ${{ steps.setci.outputs.build_py }}"
          echo "channels:             ${{ steps.setci.outputs.channels }}"
          echo "upload_artifact:      ${{ steps.setci.outputs.upload_artifact }}"
          echo "publish:              ${{ steps.setci.outputs.publish }}"
          echo "publish_to:           ${{ steps.setci.outputs.publish_to }}"
          echo "publish_if_py:        ${{ steps.setci.outputs.publish_if_py }}"
          echo "publish_if_os:        ${{ steps.setci.outputs.publish_if_os }}"
          echo "clean:                ${{ steps.setci.outputs.clean }}"
          echo "clean-package:        ${{ steps.setci.outputs.clean-package }}"
          echo "clean-label:          ${{ steps.setci.outputs.clean-label }}"
